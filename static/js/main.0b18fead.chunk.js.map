{"version":3,"sources":["components/Header/Header.module.scss","components/Layout/Layout.module.scss","components/VideoGroup/VideoGroup.module.scss","components/VideoCard/VideoCard.module.scss","components/VideoPlay/VideoPlay.module.scss","components/VideoDetail/VideoDetail.module.scss","components/Footer/Footer.module.scss","components/Header/Header.js","components/Footer/Footer.js","components/Layout/Layout.js","apis/index.js","store/index.js","components/VideoGroup/VideoGroup.js","components/VideoCard/VideoCard.js","pages/Top.js","components/VideoPlay/VideoPlay.js","components/VideoDetail/VideoDetail.js","pages/Watch.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","Style","header","item","to","footer","Layout","children","wrapper","main","Footer","youtube","axios","create","baseURL","params","part","maxResults","key","regionCode","type","fetchPlaylistData","a","get","playlistId","order","fetchSelectedData","id","initialState","selected","playlist","reducer","state","action","payload","Store","createContext","globalState","setGlobalState","StoreProvider","useReducer","Provider","value","VideoGroup","container","inner","VideoCard","src","title","position","videoid","playlistid","pathname","search","alt","Top","useContext","useEffect","then","res","data","items","map","snippet","thumbnails","standard","url","resourceId","videoId","VideoPlay","wrap","video","VideoDetail","Watch","location","useLocation","setVideos","searchParams","URLSearchParams","shift","App","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0b18fead.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1O-9b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Layout_wrapper__36Q6m\",\"main\":\"Layout_main__3Vi6x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"VideoGroup_container__jjxFg\",\"inner\":\"VideoGroup_inner__1eq9G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"VideoCard_item__23P15\",\"title\":\"VideoCard_title__1eM_s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"VideoPlay_wrap__1iv4j\",\"video\":\"VideoPlay_video__3GPlA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"VideoDetail_wrap__2QTdP\",\"title\":\"VideoDetail_title__2sG67\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__GMmPx\"};","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Style from \"./Header.module.scss\";\r\n//import { useHistory } from \"react-router-dom\";\r\n//import { Store } from \"../../store/index\";\r\n\r\nconst Header = () => {\r\n  //  const [term, setTerm] = useState(\"\");\r\n  //  const history = useHistory();\r\n  //  const { globalState, setGlobalState } = useContext(Store);\r\n  //  const handleSubmit = (e) => {\r\n  //    e.preventDefault();\r\n  //    setGlobalState({ type: \"SET_TERM\", payload: { term } });\r\n  //    history.push(`./search?query=${term}`);\r\n  //  };\r\n  /*\r\n  useEffect(() => {\r\n    setTerm(globalState.term);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n*/\r\n  return (\r\n    <div className={Style.header}>\r\n      <div className={Style.item}>\r\n        <h1>\r\n          <Link to=\"/\">MOVEMENT</Link>\r\n        </h1>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nimport Style from \"./Footer.module.scss\";\r\n\r\nconst Header = () => {\r\n  return <footer className={Style.footer}>MOVEMENT</footer>;\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport Header from \"../Header/Header\";\r\nimport Footer from \"../Footer/Footer\";\r\nimport Style from \"./Layout.module.scss\";\r\n\r\nconst Layout = ({ children }) => {\r\n  return (\r\n    <div className={Style.wrapper}>\r\n      <Header />\r\n\r\n      <main className={Style.main}>{children}</main>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import axios from \"axios\";\r\n\r\nconst KEY = \"AIzaSyCwVgNLXfzEhAblkTBWx1GC-lGezCiI0c8\";\r\n\r\nconst youtube = axios.create({\r\n  baseURL: \"https://www.googleapis.com/youtube/v3\",\r\n});\r\n\r\nconst params = {\r\n  part: \"snippet\",\r\n  maxResults: 10,\r\n  key: KEY,\r\n  regionCode: \"JP\",\r\n  type: \"video\",\r\n};\r\n\r\nexport const fetchPlaylistData = async () => {\r\n  return await youtube.get(\"/playlistItems\", {\r\n    params: {\r\n      ...params,\r\n      playlistId: \"PLOrFWVDIbHLHKyKMxWuv8ujknACOkgC4N\",\r\n      order: \"date\",\r\n    },\r\n  });\r\n};\r\n\r\nexport const fetchSelectedData = async (id) => {\r\n  return await youtube.get(\"videos\", {\r\n    params: {\r\n      ...params,\r\n      id,\r\n    },\r\n  });\r\n};\r\n","import React, { createContext, useReducer } from \"react\";\r\n\r\nconst initialState = {\r\n  selected: {},\r\n  playlist: [],\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"SET_PLAYLIST\":\r\n      return { ...state, playlist: action.payload.playlist };\r\n\r\n    case \"SET_SELECTED\":\r\n      return { ...state, selected: action.payload.selected };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const Store = createContext({\r\n  globalState: initialState,\r\n  setGlobalState: () => null,\r\n});\r\n\r\nexport const StoreProvider = ({ children }) => {\r\n  const [globalState, setGlobalState] = useReducer(reducer, initialState);\r\n  return <Store.Provider value={{ globalState, setGlobalState }}>{children}</Store.Provider>;\r\n};\r\n","import React from \"react\";\r\nimport Style from \"./VideoGroup.module.scss\";\r\n\r\nconst VideoGroup = ({ children }) => {\r\n  return (\r\n    <div className={Style.container}>\r\n      <div className={Style.inner}>{children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoGroup;\r\n","import React from \"react\";\r\nimport Style from \"./VideoCard.module.scss\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst VideoCard = ({ src, title, position, videoid, playlistid }) => {\r\n  return (\r\n    <Link\r\n      to={{\r\n        pathname: \"watch\",\r\n        search: `?v=${videoid}&list=${playlistid}&index=${position}`,\r\n      }}\r\n      className={Style.item}\r\n    >\r\n      <div>\r\n        <img src={src} alt={title} />\r\n        <p className={Style.title}>{title}</p>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default VideoCard;\r\n","import React, { useEffect, useContext } from \"react\";\r\nimport Layout from \"../components/Layout/Layout\";\r\nimport { fetchPlaylistData } from \"../apis/index\";\r\nimport { Store } from \"../store/index\";\r\nimport VideoGroup from \"../components/VideoGroup/VideoGroup\";\r\nimport VideoCard from \"../components/VideoCard/VideoCard\";\r\nconst Top = () => {\r\n  const { globalState, setGlobalState } = useContext(Store);\r\n\r\n  useEffect(() => {\r\n    fetchPlaylistData().then((res) => {\r\n      setGlobalState({\r\n        type: \"SET_PLAYLIST\",\r\n        payload: { playlist: res.data.items },\r\n      });\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  return (\r\n    <Layout>\r\n      <VideoGroup>\r\n        {globalState.playlist &&\r\n          globalState.playlist.map((playlist) => {\r\n            return (\r\n              <VideoCard\r\n                key={playlist.snippet.position}\r\n                src={playlist.snippet.thumbnails.standard.url}\r\n                title={playlist.snippet.title}\r\n                position={playlist.snippet.position}\r\n                videoid={playlist.snippet.resourceId.videoId}\r\n                playlistid={playlist.snippet.playlistId}\r\n              />\r\n            );\r\n          })}\r\n      </VideoGroup>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Top;\r\n","import React from \"react\";\r\nimport Youtube from \"react-youtube\";\r\nimport Style from \"./VideoPlay.module.scss\";\r\n\r\nexport const VideoPlay = ({ id }) => {\r\n  return (\r\n    <div className={Style.wrap}>\r\n      <Youtube className={Style.video} videoId={id} />\r\n    </div>\r\n  );\r\n};\r\n\r\n//export default VideoPlay\r\n","import React, { useContext } from \"react\";\r\n\r\nimport { Store } from \"../../store/index\";\r\n\r\nimport { VideoPlay } from \"../VideoPlay/VideoPlay\";\r\nimport Style from \"./VideoDetail.module.scss\";\r\n//import Linkify from \"react-linkify\";\r\n\r\nconst VideoDetail = () => {\r\n  const { globalState } = useContext(Store);\r\n\r\n  return globalState.selected && globalState.selected.id ? (\r\n    <div className={Style.wrap}>\r\n      <VideoPlay id={globalState.selected.id} />\r\n      <p className={Style.title}>{globalState.selected.snippet.title}</p>\r\n    </div>\r\n  ) : (\r\n    <span>no data</span>\r\n  );\r\n};\r\n\r\nexport default VideoDetail;\r\n","import React, { useEffect, useContext } from \"react\";\r\nimport Layout from \"../components/Layout/Layout\";\r\nimport VideoDetail from \"../components/VideoDetail/VideoDetail\";\r\nimport { Store } from \"../store/index\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { fetchSelectedData } from \"../apis/index\";\r\nimport VideoGroup from \"../components/VideoGroup/VideoGroup\";\r\nimport VideoCard from \"../components/VideoCard/VideoCard\";\r\n\r\nconst Watch = () => {\r\n  const { globalState, setGlobalState } = useContext(Store);\r\n  const location = useLocation();\r\n  const setVideos = async () => {\r\n    const searchParams = new URLSearchParams(location.search);\r\n    const id = searchParams.get(\"v\");\r\n    if (id) {\r\n      const selected = await fetchSelectedData(id);\r\n      setGlobalState({\r\n        type: \"SET_SELECTED\",\r\n        payload: { selected: selected.data.items.shift() },\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setVideos();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [location.search]);\r\n\r\n  return (\r\n    <Layout>\r\n      <VideoDetail />\r\n\r\n      <VideoGroup>\r\n        {globalState.playlist &&\r\n          globalState.playlist.map((playlist) => {\r\n            return (\r\n              <VideoCard\r\n                key={playlist.snippet.position}\r\n                src={playlist.snippet.thumbnails.standard.url}\r\n                title={playlist.snippet.title}\r\n                position={playlist.snippet.position}\r\n                videoid={playlist.snippet.resourceId.videoId}\r\n                playlistid={playlist.snippet.playlistId}\r\n              />\r\n            );\r\n          })}\r\n      </VideoGroup>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Watch;\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Top from \"./pages/Top\";\nimport Watch from \"./pages/Watch\";\nimport Style from \"./App.css\";\n\nfunction App() {\n  return (\n    <Router className={Style}>\n      <Switch>\n        <Route exact path=\"/\" component={Top} />\n        <Route exact path=\"/watch\" component={Watch} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (response.status === 404 || (contentType != null && contentType.indexOf(\"javascript\") === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\"No internet connection found. App is running in offline mode.\");\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { StoreProvider } from \"./store/index\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <StoreProvider>\n      <App />\n    </StoreProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}